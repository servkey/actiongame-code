ingall = 0

const kick         [ callvote 0 $arg1 $arg2 ]
const ban          [ callvote 1 $arg1  $arg2 ]
const removebans   [ callvote 2 $arg1 ]
const mastermode   [ callvote 3 $arg1 ]
const autoteam     [ callvote 4 $arg1 ]
const forceteam    [ callvote 5 $arg1 ]
const forceme      [ forceteam (player1 cn) ]
const ignoreall    [ if $connected [ ingall = 1; loop ia 21 [ ignore $ia ]; echo (blue)NOTE: (white)All clients currently on the server were ignored. ] ]
const unignoreall  [ if $connected [ ingall = 0; clearignored; echo (blue)NOTE: (white)All clients currently on the server were unignored. ] ]
const ignoreteam   [
  if (curmodeattr team) [
    _arg1 = (toupper $arg1)
    if (|| (strcmp $_arg1 CLA) (strcmp $_arg1 RVSF)) [
      loop itl 21 [
        if (isclient $itl) [
          if (= (player $itl team) (at "0 1" (strcmp $_arg1 RVSF))) [ ignore $itl ]
        ]
      ]
    ] [
      if (checkrange $_arg1 0 1) [
        loop itl 21 [
          if (isclient $itl) [
            if (= (player $itl team) $_arg1) [ ignore $itl ]
          ]
        ]
      ]
    ]
  ] [ echo (red)Error: (white)Not in a team mode. ]
]
const ignoreenemy  [ ignoreteam (at "0 1" (! (player1 team))) ]
const giveadmin    [ callvote 6 $arg1 ]
const map          [ callvote 7 $arg1 $arg2 ]
const recorddemo   [ callvote 8 1 ]
const cleardemo    [ callvote 10 $arg1 ]
const cleardemos   [ callvote 10 0 ]
const serverdesc   [ callvote 11 $arg1 ]
const shuffleteams [ callvote 12 ]

const demo [
  _demofile = $arg1
  if $connected [
    addOnLoadOnce [ mode -1; map $_demofile ]
    disconnect
  ] [
    mode -1; map $_demofile
  ]
]

// Kick/Ban/Reason menu script begins below.
tmpKBR = ""; tmpVic = 0; if (! (checkalias tmpKBP)) [ tmpKBP = "" ]; if (! (checkalias tmpKBMM)) [ tmpKBMM = 0 ]

selKBItem = [ tmpVic = (getalias arg1); tmpKBR = ""; showmenu reason ]
genKBItem = [
  if (&& (> $numargs 0) (isclient $arg1)) [
    tmpArg1 = $arg1; tmpKArg = (format "execute %1" (addpunct (concat selKBItem $tmpArg1)))
    if (curmodeattr team) [
      menuitem (concatword (player $arg1 name) (yellow) " (" $arg1 ")" (white) " - " (gray) (at (concat (concatword (red) CLA (gray)) (concatword (blue) RVSF (gray))) (player $arg1 team)) (white)) (addpunct $tmpKArg 2)
    ] [
      menuitem (concatword (player $arg1 name) (yellow) " (" $arg1 ")" (white)) (addpunct $tmpKArg 2)
    ]
  ]
]
genKBMenu = [ loop gbl (curplayers) [ if (&& (! (strcmp (player $gbl name) "")) (&& (!= (player1 cn) $gbl) (isclient $gbl))) [ genKBItem $gbl ] ] ]
refreshKBM = [ if (!= $arg1 0) [ closemenu reason; sleep 0 [ showmenu reason ] ] [ closemenu kick/ban; sleep 0 [ showmenu kick/ban ] ] ]

hasValidClients = [
  hvcOutput = 0
  loop hvl (curplayers) [ if (&& (! (strcmp (player $hvl name) "")) (&& (!= $hvl (player1 cn)) (isclient $hvl))) [ hvcOutput = 1; break ] ]
  result $hvcOutput
]
kickBanMenu = [
  newmenu kick/ban
  menuinit [ delmenu kick/ban; kickBanMenu ]
  menuitem "Refresh list"    [ refreshKBM ]
  menuitem "Remove all bans" [ removebans; refreshKBM ]
  menuitemtextinput "Admin password: " "" [ tmpKBP = $arg1 ] 0 256
  menuitem "Toggle admin status" [ if $connected [ if (currole) [ setadmin; echo you dropped admin status ] [ if (&& (strlen $tmpKBP) (! (strcmp $tmpKBP ""))) [ setadmin 1 $tmpKBP ] ] ]; refreshKBM ]
  menuitem "Toggle autoteam" [ if $connected [ if (curautoteam) [ autoteam 0 ] [ autoteam 1 ] ]; refreshKBM ]
  menuitemtextinput "Mastermode: " (getalias tmpKBMM) [ if (< $arg1 3) [ tmpKBMM = $arg1 ] [ echo (red)Error: (white)Valid range for mastermode is 0-2.; tmpKBMM = 0 ] ] 0 1
  menuitem "Change mastermode" [ if (&& (< $tmpKBMM 3) (!= (curmastermode) $tmpKBMM)) [ if $connected [ mastermode $tmpKBMM ] ]; refreshKBM ]
  menuitem "" -1
  menuitem "OK" [ closemenu kick/ban ]
  menuitem "" -1
  if (hasValidClients) [ menuitem "Choose a client: " -1 ] [ menuitem "No valid clients available." -1 ]
  menuitem "" -1
  genKBMenu
]
kickBanMenu

newmenu reason
menuitemvar [ if (currole) [ concat (blue)Note: (white)You currently have admin status. Your vote will be forced. ] ]
menuitemvar [ if (! (strcmp (player $tmpVic name) "")) [ if (curmodeattr team) [ concat (orange) Target client: " " (concatword (white) (player $tmpVic name) " - cn: " (yellow) $tmpVic (white) " - team: " (at (concat (concatword (red) CLA) (concatword (blue) RVSF)) (player $tmpVic team)) (white) " - tks: " (yellow) (player $tmpVic tks)) ] [ concat (orange) Target client: " " (concatword (white) (player $tmpVic name) " - cn: " (yellow) $tmpVic (white)) ] ] ] [ showmenu stats ]
menuitemvar [ if (> (strlen $tmpKBR) 3) [ concat (orange) Current reason: (concatword (white) $tmpKBR) ] ]
menuitemtextinput "Enter a reason: " "" [ tmpKStr = ""; loop gkl $numargs [ if (> $numargs 0) [ tmpKStr = (concatword $tmpKStr (getalias (format arg%1 $gkl)) " ") ] ]; if (< $numargs 2) [ tmpKBR = $arg1 ] [ tmpKBR = $tmpKStr ]; refreshKBM 1 ] 0 256
menuitem "" -1
menuitemvar [ concat (orange) Use a predefined reason: ]
menuitem "" -1
menuitem "Lag"                    [ tmpKBR = "lagging"; refreshKBM 1 ]
menuitem "Away from keyboard"     [ tmpKBR = "AFK/not playing"; refreshKBM 1 ]
menuitem "Vote abuse"             [ tmpKBR = "kick/ban/other vote abuse"; refreshKBM 1 ]
menuitem "Avoiding kicks/bans"    [ tmpKBR = "avoiding kicks/bans"; refreshKBM 1 ]
menuitem "Private match"          [ tmpKBR = (concat sorry, organizing a private (concatword match ", " (player $tmpVic name))); refreshKBM 1 ]
menuitem "Obvious cheat"          [ tmpKBR = "blatant cheating"; refreshKBM 1 ]
menuitem "Friendly fire/TK"       [ if (curmodeattr team) [ tmpKBR = "intentional teamkills/team damage" ] [ echo (red)Error: (white) (getmode 1) is not a team mode. ]; refreshKBM 1 ]
menuitem "Spamming"               [ tmpKBR = "spamming chat/voicecoms/etc."; refreshKBM 1 ]
menuitem "Poor/abusive behaviour" [ tmpKBR = "poor/abusive behaviour"; refreshKBM 1 ]
menuitem "Inappropriate language" [ tmpKBR = "inappropriate language"; refreshKBM 1 ]
menuitem "Inappropriate name"     [ tmpKBR = (concat inappropriate name (addpunct (player $tmpVic name) 2)); refreshKBM 1 ]
menuitem "" -1
menuitemvar [ concat (orange) Action: ]
menuitem "" -1
menuitemvar [ concat (yellow)Kick ] [ if (> (strlen $tmpKBR) 3) [ if $votepending [ if (currole) [ vote 2 ]; sleep 250 [ kick $tmpVic $tmpKBR ] ] ] [ kick $tmpVic $tmpKBR ] ]
menuitemvar [ concat (red)Ban ]  [ if (> (strlen $tmpKBR) 3) [ if $votepending [ if (currole) [ vote 2 ]; sleep 250 [ ban $tmpVic $tmpKBR ] ] ] [ ban $tmpVic $tmpKBR ] ]
menuitemvar [ concat (orange)Forceteam ] [ if (curmodeattr team) [ forceteam $tmpVic ] [ echo (red)Error: (white) (getmode 1) is not a team mode. ] ]
menuitemvar [ concat (blue)Whois ] [ whois $tmpVic ]
menuitem "Spectate" [ if (&& $connected (> (curplayers) 1)) [ spectate; setfollowplayer $tmpVic ] [ echo (red)Error: (white)Not connected or not enough players. ] ]
menuitemvar [ concat (green)Refresh] [ refreshKBM 1 ]
menuitem "" -1
menuitem "Back" [ closemenu reason ]

newmenu stats
menuitemvar [ concat (orange)Current statistics for client: (white) (player $tmpVic name) (yellow) (addpunct $tmpVic 2)  ]
menuitemvar [ if (curmodeattr team) [ concat Team: (at (concat (concatword (red) CLA) (concatword (blue) RVSF)) (player $tmpVic team)) ] [ concat Mode: (yellow) (getmode 1) ] ]
menuitemvar [ if (curmodeattr team) [ concat Teamkills: (red) (player $tmpVic tks) ] ]
menuitemvar [ if (curmodeattr flag) [ concat Flags: (player $tmpVic flags) ] [ concat Flags: N/A ] ]
menuitemvar [ concat Frags: (player $tmpVic frags) ]
menuitemvar [ concat Deaths: (player $tmpVic deaths) ]
menuitemvar [ if $connected [ concat Score: (player $tmpVic score) ] [ concat Score: N/A ] ]
menuitem "" -1
menuitem "Refresh" [ closemenu stats; sleep 0 [ showmenu stats ] ]
menuitem "Back" [ closemenu stats ]

addListOnQuit "hvcOutput tmpArg1 tmpKArg tmpKBP tmpVic votepending"
